From 3ef7ad4736bb307358ab2ec0bf3bf1cccad7fe63 Mon Sep 17 00:00:00 2001
From: Joseph Liu <kwliu@nuvoton.com>
Date: Tue, 3 Sep 2024 11:56:40 +0800
Subject: [PATCH] Add session RemoteMACAddress support

Upstream-Status: Inappropriate [oe-specific]

Signed-off-by: Stanley Chu <yschu@nuvoton.com>
Signed-off-by: Joseph Liu <kwliu@nuvoton.com>
---
 apphandler.cpp | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/apphandler.cpp b/apphandler.cpp
index ddc6fa1b..98dd7116 100644
--- a/apphandler.cpp
+++ b/apphandler.cpp
@@ -1172,7 +1172,7 @@ uint8_t getSessionState(ipmi::Context::ptr ctx, const std::string& service,
     return ipmi::ccSuccess;
 }
 
-static constexpr uint8_t macAddrLen = 6;
+//static constexpr uint8_t macAddrLen = 6;
 /** Alias SessionDetails - contain the optional information about an
  *        RMCP+ session.
  *
@@ -1188,7 +1188,7 @@ static constexpr uint8_t macAddrLen = 6;
  */
 using SessionDetails =
     std::tuple<uint2_t, uint6_t, uint4_t, uint4_t, uint4_t, uint4_t, uint32_t,
-               std::array<uint8_t, macAddrLen>, uint16_t>;
+               std::vector<uint8_t>, uint16_t>;
 
 /** @brief get session details for a given session
  *
@@ -1237,9 +1237,11 @@ ipmi::Cc getSessionDetails(ipmi::Context::ptr ctx, const std::string& service,
         std::get<5>(details) = rmcpPlusProtocol;
         std::get<6>(details) =
             ipmi::mappedVariant<uint32_t>(sessionProps, "RemoteIPAddr", 0);
-        // std::get<7>(details) = {{0}}; // default constructed to all 0
+        std::get<7>(details) =
+            ipmi::mappedVariant<std::vector<uint8_t>>(
+                sessionProps, "RemoteMACAddress", std::vector<uint8_t>(6, 0));    
         std::get<8>(details) =
-            ipmi::mappedVariant<uint16_t>(sessionProps, "RemotePort", 0);
+            ipmi::mappedVariant<uint16_t>(sessionProps, "RemotePort", 0);        
     }
 
     return ipmi::ccSuccess;
-- 
2.34.1

