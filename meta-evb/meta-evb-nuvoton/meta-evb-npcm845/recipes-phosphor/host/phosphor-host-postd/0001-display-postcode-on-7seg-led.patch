From 3fa8bbfbee6ff7abfb22f4c8e303b33a40a43e3c Mon Sep 17 00:00:00 2001
From: Stanley Chu <yschu@nuvoton.com>
Date: Fri, 20 Sep 2024 13:57:36 +0800
Subject: [PATCH] display postcode on 7seg led

Signed-off-by: Stanley Chu <yschu@nuvoton.com>
---
 ipmisnoop/ipmisnoop.cpp | 29 +++++++++++++++++++++++------
 ipmisnoop/ipmisnoop.hpp | 31 ++++++++++++++++++++++++++-----
 2 files changed, 49 insertions(+), 11 deletions(-)

diff --git a/ipmisnoop/ipmisnoop.cpp b/ipmisnoop/ipmisnoop.cpp
index 56d06d9..fd7de8a 100644
--- a/ipmisnoop/ipmisnoop.cpp
+++ b/ipmisnoop/ipmisnoop.cpp
@@ -73,14 +73,31 @@ static int configGPIODirOutput()
 }
 
 // Display the received postcode into seven segment display
-int IpmiPostReporter::postCodeDisplay(uint8_t status)
+int IpmiPostReporter::postCodeDisplay(uint8_t code)
 {
-    for (int iteration = 0; iteration < 8; iteration++)
-    {
-        // split byte to write into GPIOs
-        int value = !((status >> iteration) & 0x01);
+    uint8_t digit;
+    char str[1024];
+
+    sprintf(str, "postcode is %02x\n", code);
+    std::string Str = str;
+    std::cerr << Str.c_str();
 
-        led_lines[iteration].set_value(value);
+    // show digit 1
+    led_lines[0].set_value(0);
+    digit = seven_seg_bits[(code>>4)&0x0f];
+    for (int bit = 1; bit < 8; bit++)
+    {
+        int value = !((digit >> bit) & 0x01);
+        led_lines[bit].set_value(value);
+    }
+    sleep(1);
+    // show digit 0
+    led_lines[0].set_value(1);
+    digit = seven_seg_bits[code&0x0f];
+    for (int bit = 1; bit < 8; bit++)
+    {
+        int value = !((digit >> bit) & 0x01);
+        led_lines[bit].set_value(value);
     }
     return 0;
 }
diff --git a/ipmisnoop/ipmisnoop.hpp b/ipmisnoop/ipmisnoop.hpp
index d8319ac..1a4935c 100644
--- a/ipmisnoop/ipmisnoop.hpp
+++ b/ipmisnoop/ipmisnoop.hpp
@@ -25,6 +25,27 @@ const int maxPosition = 4;
 extern bool sevenSegmentLedEnabled;
 
 extern std::vector<gpiod::line> led_lines;
+/*
+ * 7 segments to led_lines mapping
+ * led_lines[0] = digit selector
+ * led_lines[7:1] = led[a:g]
+ *    ___
+ *   | 7 |
+ * 2 |___| 6
+ *   | 1 |
+ * 3 |___| 5
+ *     4
+ *
+ * 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F
+ *  _       _   _       _   _   _   _   _   _       _       _   _
+ * | |   |  _|  _| |_| |_  |_    | |_| |_| |_| |_  |    _| |_  |_
+ * |_|   | |_   _|   |  _| |_|   | |_|   | | | |_| |_  |_| |_  |
+ *
+ */
+const uint8_t seven_seg_bits[] = {
+	0xFC, 0x60, 0xDA, 0xF2, 0x66, 0xB6, 0xBE, 0xE0,
+	0xFE, 0xF6, 0xEE, 0x3E, 0x9C, 0x7A, 0x9E, 0x8E
+};
 
 using Selector =
     sdbusplus::xyz::openbmc_project::Chassis::Buttons::server::HostSelector;
@@ -76,9 +97,9 @@ struct IpmiPostReporter : PostObject
                 std::filesystem::path name(msg.get_path());
                 objectName = name.filename();
 
+#if 0
                 std::string hostNumStr = objectName.substr(hostParseIdx);
                 size_t hostNum = std::stoi(hostNumStr);
-
                 size_t position = getSelectorPosition(bus);
 
                 if (position > maxPosition)
@@ -87,7 +108,7 @@ struct IpmiPostReporter : PostObject
                                  "for all hosts "
                               << std::endl;
                 }
-
+#endif
                 // Check if it was the Value property that changed.
                 auto valPropMap = msgData.find("Value");
                 if (valPropMap == msgData.end())
@@ -100,7 +121,7 @@ struct IpmiPostReporter : PostObject
 
                 if (postcode <= maxPostcode)
                 {
-                    if (position == hostNum)
+                    //if (position == hostNum)
                     {
                         uint8_t postcode_8bit =
                             static_cast<uint8_t>(postcode & 0x0000FF);
@@ -111,11 +132,11 @@ struct IpmiPostReporter : PostObject
                             fprintf(stderr, "Error in display the postcode\n");
                         }
                     }
-                    else
+                    /*else
                     {
                         fprintf(stderr, "Host Selector Position and host "
                                         "number is not matched..\n");
-                    }
+                    }*/
                 }
                 else
                 {
-- 
2.34.1

