From 257a03ce5077fbe65b6ae66a05cd4c3fcb8f1d85 Mon Sep 17 00:00:00 2001
From: Joseph Liu <kwliu@nuvoton.com>
Date: Tue, 8 Oct 2024 16:03:08 +0800
Subject: [PATCH 1/2] remove aspeed

Signed-off-by: Joseph Liu <kwliu@nuvoton.com>
---
 src/host-misc-manager.cpp  |  8 ++++----
 src/platform-state-mgr.cpp | 20 ++++++++++----------
 2 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/src/host-misc-manager.cpp b/src/host-misc-manager.cpp
index 6af074a..11a4604 100644
--- a/src/host-misc-manager.cpp
+++ b/src/host-misc-manager.cpp
@@ -37,8 +37,8 @@ int main()
     server.add_manager(hostMiscPath);
 
     std::unique_ptr<PlatformState> platformState{};
-    std::unique_ptr<MailboxMgr> mailboxMgr{};
-    std::unique_ptr<SeamlessUpdate> seamlessUpdate{};
+    //std::unique_ptr<MailboxMgr> mailboxMgr{};
+    //std::unique_ptr<SeamlessUpdate> seamlessUpdate{};
     try
     {
         platformState = std::make_unique<PlatformState>(io, server, conn);
@@ -48,7 +48,7 @@ int main()
         phosphor::logging::log<phosphor::logging::level::ERR>(e.what());
     }
 
-    try
+    /*try
     {
         mailboxMgr = std::make_unique<MailboxMgr>(io, server, conn);
     }
@@ -64,7 +64,7 @@ int main()
     catch (std::exception const &e)
     {
         phosphor::logging::log<phosphor::logging::level::ERR>(e.what());
-    }
+    }*/
 
     io.run();
 }
diff --git a/src/platform-state-mgr.cpp b/src/platform-state-mgr.cpp
index f7cc2c1..2103327 100644
--- a/src/platform-state-mgr.cpp
+++ b/src/platform-state-mgr.cpp
@@ -51,7 +51,7 @@ static constexpr const char* platformStateIntf =
 // System interface channels will be kept open to all IPMI commands till post
 // complete or CoreBiosDone. Setting a maximum BIOS boot time after which
 // CoreBiosDone will be set as true by default which limit the security exposure
-static constexpr const int maxBiosBootWaitTimeSec = 600;
+static constexpr const int maxBiosBootWaitTimeSec = 300;
 static constexpr const int pollIntervalSec = 1;
 
 PlatformState::PlatformState(
@@ -68,13 +68,13 @@ PlatformState::PlatformState(
 
 void PlatformState::sioStatusInit(void)
 {
-    const std::string device = "/sys/devices/platform/ahb/ahb:apb/1e789000.lpc/"
+    /*const std::string device = "/sys/devices/platform/ahb/ahb:apb/1e789000.lpc/"
                                "1e789000.lpc:regs/sio_status";
     deviceFile.open(device);
     if (!deviceFile.good())
     {
         throw std::runtime_error("Error opening" + device);
-    }
+    }*/
     setupPowerMatch();
 }
 
@@ -117,7 +117,7 @@ void PlatformState::asyncReadeSpi(void)
                 // which will reset the poll timer while it is already running
                 if (coreBiosDone)
                 {
-                    sioStatusClear();
+                    //sioStatusClear();
                     restartPollTimer();
                 }
             }
@@ -243,19 +243,19 @@ void PlatformState::detectCoreBiosDone(void)
             channelAbort(io, "pollTimer failed", ec);
             return;
         }
-        constexpr uint8_t coreBiosDoneMask = 0x01;
+        //constexpr uint8_t coreBiosDoneMask = 0x01;
 
         if (!isPowerOn())
         {
-            sioStatusClear();
+            //sioStatusClear();
             coreBiosDone = false;
             log<level::INFO>("PowerStatus = off, setting CoreBiosDone = false");
         }
-        else if (static_cast<bool>(sioStatusRead() & coreBiosDoneMask))
+        /*else if (static_cast<bool>(sioStatusRead() & coreBiosDoneMask))
         {
             coreBiosDone = true;
             log<level::INFO>("Received CoreBiosDone = true");
-        }
+        }*/
         else if (++pollCount < (int)maxBiosBootWaitTimeSec / pollIntervalSec)
         {
             coreBiosDone = false;
@@ -295,7 +295,7 @@ void PlatformState::triggerPostComplete()
     }
 }
 
-uint8_t PlatformState::sioStatusRead(void)
+/*uint8_t PlatformState::sioStatusRead(void)
 {
     std::string line;
     // always read the first line
@@ -320,7 +320,7 @@ void PlatformState::sioStatusClear(void)
     deviceFile.seekg(0, std::ios::beg);
     deviceFile << sioStatusClearBit;
     log<level::INFO>("SIO status register cleared");
-}
+}*/
 
 bool PlatformState::isPowerOn(void)
 {
-- 
2.34.1

