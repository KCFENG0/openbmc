From 49a3360b5914c00e2226b2c77b680ee3dfd76293 Mon Sep 17 00:00:00 2001
From: Stanley Chu <yschu@nuvoton.com>
Date: Thu, 13 Oct 2022 17:10:51 +0800
Subject: [PATCH 14/71] i3c: master: svc: fix invalid IBI issue

1. Cancel AUTOIBI when polling for IBIWON timeout
2. Clear SLVSTART status to prevent invalid IBI event.

Signed-off-by: Stanley Chu <yschu@nuvoton.com>
---
 drivers/i3c/master/svc-i3c-master.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/i3c/master/svc-i3c-master.c b/drivers/i3c/master/svc-i3c-master.c
index 36117e3dfc55..b0424a5a9d63 100644
--- a/drivers/i3c/master/svc-i3c-master.c
+++ b/drivers/i3c/master/svc-i3c-master.c
@@ -397,7 +397,8 @@ static void svc_i3c_master_ibi_work(struct work_struct *work)
 					 SVC_I3C_MSTATUS_IBIWON(val), 0, 1000);
 	if (ret) {
 		dev_err(master->dev, "Timeout when polling for IBIWON\n");
-		svc_i3c_master_emit_stop(master);
+		/* Cancel AUTOIBI */
+		writel(0, master->regs + SVC_I3C_MCTRL);
 		svc_i3c_master_clear_merrwarn(master);
 		goto reenable_ibis;
 	}
@@ -1075,6 +1076,11 @@ static int svc_i3c_master_xfer(struct svc_i3c_master *master,
 
 	if (!continued) {
 		svc_i3c_master_emit_stop(master);
+		/*
+		 * Workaround: clear the invalid SlaveStart event under
+		 * bad signals condition.
+		 */
+		writel(SVC_I3C_MINT_SLVSTART, master->regs + SVC_I3C_MSTATUS);
 
 		/* Wait idle if stop is sent. */
 		readl_poll_timeout(master->regs + SVC_I3C_MSTATUS, reg,
@@ -1446,6 +1452,8 @@ static int svc_i3c_master_enable_ibi(struct i3c_dev_desc *dev)
 		return ret;
 	}
 
+	/* Clear the interrupt status */
+	writel(SVC_I3C_MINT_SLVSTART, master->regs + SVC_I3C_MSTATUS);
 	svc_i3c_master_enable_interrupts(master, SVC_I3C_MINT_SLVSTART);
 
 	return i3c_master_enec_locked(m, dev->info.dyn_addr, I3C_CCC_EVENT_SIR);
-- 
2.34.1

